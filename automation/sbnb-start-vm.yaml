---

- hosts: "{{ lookup('ansible.builtin.env', 'SBNB_HOSTS') }}"
  gather_facts: false
  ignore_unreachable: true

  tasks:
    - ping:

    - name: Include wordlists
      include_vars:
        file: wordlists.yaml

    - name: Generate timestamp
      set_fact:
        timestamp: "{{ '%Y%m%d%H%M%S' | strftime }}"

    - name: Generate random seed
      set_fact:
        random_seed: "{{ timestamp | int }}"

    - name: Generate human-readable VM name
      set_fact:
        vm_id: "{{ inventory_hostname + '-vm-' + adverbs | random(seed=random_seed) + '-' + adjectives | random(seed=random_seed) + '-' + names | random(seed=random_seed) }}"

    - name: Copy configuration scripts
      copy:
        src: "{{ playbook_dir }}/../scripts/{{ item }}"
        dest: /dev/shm/
        mode: u+x
      loop:
        - "sbnb-configure-system.sh"
        - "sbnb-configure-networking.sh"
        - "sbnb-configure-storage.sh"
        - "sbnb-start-vm.sh"

    - name: Execute host configuration script
      command: sh /dev/shm/sbnb-configure-system.sh

    - name: Set path to VM config
      set_fact:
        json_path: "{{ lookup('ansible.builtin.env', 'SBNB_VM_CONFIG_PATH', default='sbnb-example-vm.json') }}"

    - name: If VM json config exist
      local_action: stat path="{{ json_path }}"
      connection: local
      register: file

    - name: Copy VM config if it exists
      copy: src="{{ json_path }}" dest=/dev/shm/sbnb-example-vm.json
      when: file.stat.exists

    - name: Set args
      set_fact:
        args: "{{ '-f /dev/shm/sbnb-example-vm.json' }}"
      when: file.stat.exists

    - name: Print VM info
      ansible.builtin.debug:
        msg: VM id "{{ vm_id }}"

    - name: Start VM using qemu container
      docker_container:
        name: "{{ vm_id }}"
        image: sbnb/svsm
        pull: always
        privileged: true
        network_mode: host
        devices:
          - /dev/kvm:/dev/kvm
          - /dev/sev:/dev/sev
        volumes:
          - /sys:/sys
          - /dev:/dev
          - /dev/shm:/dev/shm
          - /mnt/sbnb-data:/mnt/sbnb-data
          - /dev/shm/sbnb-start-vm.sh:/dev/shm/sbnb-start-vm.sh
        env:
          SBNB_VM_TSKEY: "{{ lookup('ansible.builtin.env', 'SBNB_VM_TSKEY') }}"
          SBNB_VM_VCPU: "{{ lookup('ansible.builtin.env', 'SBNB_VM_VCPU') }}"
          SBNB_VM_MEM: "{{ lookup('ansible.builtin.env', 'SBNB_VM_MEM') }}"
          SBNB_VM_IMAGE_SIZE: "{{ lookup('ansible.builtin.env', 'SBNB_VM_IMAGE_SIZE') }}"
          SBNB_VM_ATTACH_GPUS: "{{ lookup('ansible.builtin.env', 'SBNB_VM_ATTACH_GPUS') }}"
          SBNB_VM_ATTACH_PCIE_DEVICES: "{{ lookup('ansible.builtin.env', 'ATTACH_PCIE_DEVICES') }}"
          SBNB_VM_CONFIDENTIAL_COMPUTING: "{{ lookup('ansible.builtin.env', 'CONFIDENTIAL_COMPUTING') }}"
          SBNB_VM_HOSTNAME: "{{ vm_id }}"

        command: /dev/shm/sbnb-start-vm.sh {{ args }}
